
1.
- 在 cd /home/project/redis-6.0.6 目录下新建 config、log、data、node  、run 这 5 个文件夹。


  cd /home/project/redis-6.0.6
  mkdir -p /home/project/redis-6.0.6/config
  mkdir -p /home/project/redis-6.0.6/log
  mkdir -p /home/project/redis-6.0.6/data
  mkdir -p /home/project/redis-6.0.6/node
  mkdir -p /home/project/redis-6.0.6/run

  
- 在创建好的 data 目录下，在分别创建 8000、8001、8002、 8003、8004、8005 这 6 个文件夹。


  mkdir -p /home/project/redis-6.0.6/data/8000
  mkdir -p /home/project/redis-6.0.6/data/8001
  mkdir -p /home/project/redis-6.0.6/data/8002
  mkdir -p /home/project/redis-6.0.6/data/8003
  mkdir -p /home/project/redis-6.0.6/data/8004
  mkdir -p /home/project/redis-6.0.6/data/8005

  
- 将 cd /home/project/redis-6.0.6/redis.conf 文件复制 6 个到 /home/project/redis-6.0.6/config 目录下，名称分别为 redis_8000.conf、redis_8001.conf、redis_8002.conf、redis_8003.conf、redis_8004.conf、redis_8005.conf。


  cp /home/project/redis-6.0.6/redis.conf /home/project/redis-6.0.6/config/redis_8000.conf
  cp /home/project/redis-6.0.6/redis.conf /home/project/redis-6.0.6/config/redis_8001.conf
  cp /home/project/redis-6.0.6/redis.conf /home/project/redis-6.0.6/config/redis_8002.conf
  cp /home/project/redis-6.0.6/redis.conf /home/project/redis-6.0.6/config/redis_8003.conf
  cp /home/project/redis-6.0.6/redis.conf /home/project/redis-6.0.6/config/redis_8004.conf
  cp /home/project/redis-6.0.6/redis.conf /home/project/redis-6.0.6/config/redis_8005.conf


- 打开 /home/project/redis-6.0.6/config/ 目录下配置文件，在文件中找到以下参数进行修改。

- redis_8000.conf：

  # 添加本机的ip
  bind 128.0.0.1
  # 端口
  port 8000
  # 守护进程
  daemonize yes
  # 指定进程信息存储文件
  pidfile /home/project/redis-6.0.6/run/redis_8000.pid 
  # 指定日志存储文件
  logfile /home/project/redis-6.0.6/log/redis_8000.log
  # 指定数据文件路径
  dir /home/project/redis-6.0.6/data/8000
  # 指定 rdb 持久化文件名（会自动生成到dir指定的路径下）
  dbfilename dump_8000.rdb
  # 持久化
  appendonly yes
  # 指定aof持久化文件名
  appendfilename "appendonly_8000.aof"
  # 开启集群
  cluster-enabled yes  
  # 集群节点nodes信息配置文件（是自动生成的）
  cluster-config-file /home/project/redis-6.0.6/node/nodes-8000.conf
  # 集群节点的超时时间，单位：ms，超时后集群会认为该节点失败
  cluster-node-timeout 15000


 - redis_8001.conf：

  # 添加本机的ip
  bind 128.0.0.1
  # 端口
  port 8001
  # 守护进程
  daemonize yes
  # 指定进程信息存储文件
  pidfile /home/project/redis-6.0.6/run/redis_8001.pid 
  # 指定日志存储文件
  logfile /home/project/redis-6.0.6/log/redis_8001.log
  # 指定数据文件路径
  dir /home/project/redis-6.0.6/data/8001
  # 指定 rdb 持久化文件名（会自动生成到dir指定的路径下）
  dbfilename dump_8001.rdb
  # 持久化
  appendonly yes
  # 指定aof持久化文件名
  appendfilename "appendonly_8001.aof"
  # 开启集群
  cluster-enabled yes  
  # 集群节点nodes信息配置文件（是自动生成的）
  cluster-config-file /home/project/redis-6.0.6/node/nodes-8001.conf
  # 集群节点的超时时间，单位：ms，超时后集群会认为该节点失败
  cluster-node-timeout 15000


- redis_8002.conf：

  # 添加本机的ip
  bind 128.0.0.1
  # 端口
  port 8002
  # 守护进程
  daemonize yes
  # 指定进程信息存储文件
  pidfile /home/project/redis-6.0.6/run/redis_8002.pid 
  # 指定日志存储文件
  logfile /home/project/redis-6.0.6/log/redis_8002.log
  # 指定数据文件路径
  dir /home/project/redis-6.0.6/data/8002
  # 指定 rdb 持久化文件名（会自动生成到dir指定的路径下）
  dbfilename dump_8002.rdb
  # 持久化
  appendonly yes
  # 指定aof持久化文件名
  appendfilename "appendonly_8002.aof"
  # 开启集群
  cluster-enabled yes  
  # 集群节点nodes信息配置文件（是自动生成的）
  cluster-config-file /home/project/redis-6.0.6/node/nodes-8002.conf
  # 集群节点的超时时间，单位：ms，超时后集群会认为该节点失败
  cluster-node-timeout 15000


- redis_8003.conf：

  # 添加本机的ip
  bind 128.0.0.1
  # 端口
  port 8003
  # 守护进程
  daemonize yes
  # 指定进程信息存储文件
  pidfile /home/project/redis-6.0.6/run/redis_8003.pid 
  # 指定日志存储文件
  logfile /home/project/redis-6.0.6/log/redis_8003.log
  # 指定数据文件路径
  dir /home/project/redis-6.0.6/data/8003
  # 指定 rdb 持久化文件名（会自动生成到dir指定的路径下）
  dbfilename dump_8003.rdb
  # 持久化
  appendonly yes
  # 指定aof持久化文件名
  appendfilename "appendonly_8003.aof"
  # 开启集群
  cluster-enabled yes  
  # 集群节点nodes信息配置文件（是自动生成的）
  cluster-config-file /home/project/redis-6.0.6/node/nodes-8003.conf
  # 集群节点的超时时间，单位：ms，超时后集群会认为该节点失败
  cluster-node-timeout 15000


- redis_8004.conf：

  # 添加本机的ip
  bind 128.0.0.1
  # 端口
  port 8004
  # 守护进程
  daemonize yes
  # 指定进程信息存储文件
  pidfile /home/project/redis-6.0.6/run/redis_8004.pid 
  # 指定日志存储文件
  logfile /home/project/redis-6.0.6/log/redis_8004.log
  # 指定数据文件路径
  dir /home/project/redis-6.0.6/data/8004
  # 指定 rdb 持久化文件名（会自动生成到dir指定的路径下）
  dbfilename dump_8004.rdb
  # 持久化
  appendonly yes
  # 指定aof持久化文件名
  appendfilename "appendonly_8004.aof"
  # 开启集群
  cluster-enabled yes  
  # 集群节点nodes信息配置文件（是自动生成的）
  cluster-config-file /home/project/redis-6.0.6/node/nodes-8004.conf
  # 集群节点的超时时间，单位：ms，超时后集群会认为该节点失败
  cluster-node-timeout 15000


 - redis_8005.conf：

  # 添加本机的ip
  bind 128.0.0.1
  # 端口
  port 8005
  # 守护进程
  daemonize yes
  # 指定进程信息存储文件
  pidfile /home/project/redis-6.0.6/run/redis_8005.pid 
  # 指定日志存储文件
  logfile /home/project/redis-6.0.6/log/redis_8005.log
  # 指定数据文件路径
  dir /home/project/redis-6.0.6/data/8005
  # 指定 rdb 持久化文件名（会自动生成到dir指定的路径下）
  dbfilename dump_8005.rdb
  # 持久化
  appendonly yes
  # 指定aof持久化文件名
  appendfilename "appendonly_8005.aof"
  # 开启集群
  cluster-enabled yes  
  # 集群节点nodes信息配置文件（是自动生成的）
  cluster-config-file /home/project/redis-6.0.6/node/nodes-8005.conf
  # 集群节点的超时时间，单位：ms，超时后集群会认为该节点失败
  cluster-node-timeout 15000

2.启动实例的命令如下：

- 启动 8000 实例

  cd /home/project/redis-6.0.6 
  ./src/redis-server ./config/redis_8000.conf

- 启动 8001 实例

  cd /home/project/redis-6.0.6 
  ./src/redis-server ./config/redis_8001.conf

- 启动 8002 实例

  cd /home/project/redis-6.0.6 
  ./src/redis-server ./config/redis_8002.conf

- 启动 8003 实例

  cd /home/project/redis-6.0.6 
  ./src/redis-server ./config/redis_8003.conf

- 启动 8004 实例

  cd /home/project/redis-6.0.6 
  ./src/redis-server ./config/redis_8004.conf

- 启动 8005 实例

  cd /home/project/redis-6.0.6 
  ./src/redis-server ./config/redis_8005.conf

3. 创建集群

cd /home/project/redis-6.0.6/src
./redis-cli --cluster create 128.0.0.1:8000 128.0.0.1:8001 128.0.0.1:8002 128.0.0.1:8003 128.0.0.1:8004 128.0.0.1:8005 --cluster-replicas 1

4. 查看集群节点信息

cd /home/project/redis-6.0.6/src
./redis-cli -h 128.0.0.1 -p 8000 cluster info

5. 添加数据
shiyanlou:project/ $ cd /home/project/redis-6.0.6/src 
shiyanlou:src/ $ redis-cli -c -h 127.0.0.1 -p 8000
127.0.0.1:8000> set move1 "红海行动"
OK
127.0.0.1:8000> set move2 "霸王别姬"
-> Redirected to slot [15868] located at 127.0.0.1:8002
OK
127.0.0.1:8002> set move3 "战狼2"
OK
127.0.0.1:8002> set move4 "长津湖"
-> Redirected to slot [7482] located at 127.0.0.1:8001
OK
127.0.0.1:8001> set move5 "美人鱼"
-> Redirected to slot [3355] located at 127.0.0.1:8000
OK
127.0.0.1:8000> set move6 "你好，李焕英"
-> Redirected to slot [15736] located at 127.0.0.1:8002
OK
127.0.0.1:8002> 